/// <reference types="react" />
import { ElementType, StoreType } from '../model/store';
export declare const FiltersPicker: (({ element, store, elements, }: {
    elements?: ({
        id: string;
        type: string;
        name: string;
        x: number;
        y: number;
        rotation: number;
        opacity: number;
        blurEnabled: boolean;
        blurRadius: number;
        brightnessEnabled: boolean;
        brightness: number;
        sepiaEnabled: boolean;
        grayscaleEnabled: boolean;
        shadowEnabled: boolean;
        shadowBlur: number;
        shadowOffsetX: number;
        shadowOffsetY: number;
        shadowColor: string;
        shadowOpacity: number;
        custom: any;
        visible: boolean;
        draggable: boolean;
        selectable: boolean;
        contentEditable: boolean;
        styleEditable: boolean;
        alwaysOnTop: boolean;
        showInExport: boolean;
    } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
        readonly locked: boolean;
        readonly page: any;
        readonly store: any;
    } & {
        toJSON(): {};
    } & {
        clone(attrs: any): {
            id: string;
            type: string;
            name: string;
            x: number;
            y: number;
            rotation: number;
            opacity: number;
            blurEnabled: boolean;
            blurRadius: number;
            brightnessEnabled: boolean;
            brightness: number;
            sepiaEnabled: boolean;
            grayscaleEnabled: boolean;
            shadowEnabled: boolean;
            shadowBlur: number;
            shadowOffsetX: number;
            shadowOffsetY: number;
            shadowColor: string;
            shadowOpacity: number;
            custom: any;
            visible: boolean;
            draggable: boolean;
            selectable: boolean;
            contentEditable: boolean;
            styleEditable: boolean;
            alwaysOnTop: boolean;
            showInExport: boolean;
        } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
            readonly locked: boolean;
            readonly page: any;
            readonly store: any;
        } & {
            toJSON(): {};
        } & any & import("mobx-state-tree").IStateTreeNode<import("mobx-state-tree").IModelType<{
            id: import("mobx-state-tree").ISimpleType<string>;
            type: import("mobx-state-tree").IType<string | undefined, string, string>;
            name: import("mobx-state-tree").IType<string | undefined, string, string>;
            x: import("mobx-state-tree").IType<number | undefined, number, number>;
            y: import("mobx-state-tree").IType<number | undefined, number, number>;
            rotation: import("mobx-state-tree").IType<number | undefined, number, number>;
            opacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            blurEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            blurRadius: import("mobx-state-tree").IType<number | undefined, number, number>;
            brightnessEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            brightness: import("mobx-state-tree").IType<number | undefined, number, number>;
            sepiaEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            grayscaleEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowBlur: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetX: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetY: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowColor: import("mobx-state-tree").IType<string | undefined, string, string>;
            shadowOpacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            custom: import("mobx-state-tree").IType<any, any, any>;
            visible: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            draggable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            selectable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            contentEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            styleEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            alwaysOnTop: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            showInExport: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        }, {
            readonly locked: boolean;
            readonly page: any;
            readonly store: any;
        } & {
            toJSON(): {};
        } & any, import("mobx-state-tree").ModelCreationType<import("mobx-state-tree/dist/internal").ExtractCFromProps<{
            id: import("mobx-state-tree").ISimpleType<string>;
            type: import("mobx-state-tree").IType<string | undefined, string, string>;
            name: import("mobx-state-tree").IType<string | undefined, string, string>;
            x: import("mobx-state-tree").IType<number | undefined, number, number>;
            y: import("mobx-state-tree").IType<number | undefined, number, number>;
            rotation: import("mobx-state-tree").IType<number | undefined, number, number>;
            opacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            blurEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            blurRadius: import("mobx-state-tree").IType<number | undefined, number, number>;
            brightnessEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            brightness: import("mobx-state-tree").IType<number | undefined, number, number>;
            sepiaEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            grayscaleEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowBlur: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetX: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetY: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowColor: import("mobx-state-tree").IType<string | undefined, string, string>;
            shadowOpacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            custom: import("mobx-state-tree").IType<any, any, any>;
            visible: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            draggable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            selectable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            contentEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            styleEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            alwaysOnTop: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            showInExport: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        }>>, {}>>;
        set(attrs: any): void;
        moveUp(): void;
        moveTop(): void;
        moveDown(): void;
        moveBottom(): void;
        beforeDestroy(): void;
    } & import("mobx-state-tree").IStateTreeNode<import("mobx-state-tree").IModelType<{
        id: import("mobx-state-tree").ISimpleType<string>;
        type: import("mobx-state-tree").IType<string | undefined, string, string>;
        name: import("mobx-state-tree").IType<string | undefined, string, string>;
        x: import("mobx-state-tree").IType<number | undefined, number, number>;
        y: import("mobx-state-tree").IType<number | undefined, number, number>;
        rotation: import("mobx-state-tree").IType<number | undefined, number, number>;
        opacity: import("mobx-state-tree").IType<number | undefined, number, number>;
        blurEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        blurRadius: import("mobx-state-tree").IType<number | undefined, number, number>;
        brightnessEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        brightness: import("mobx-state-tree").IType<number | undefined, number, number>;
        sepiaEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        grayscaleEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        shadowEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        shadowBlur: import("mobx-state-tree").IType<number | undefined, number, number>;
        shadowOffsetX: import("mobx-state-tree").IType<number | undefined, number, number>;
        shadowOffsetY: import("mobx-state-tree").IType<number | undefined, number, number>;
        shadowColor: import("mobx-state-tree").IType<string | undefined, string, string>;
        shadowOpacity: import("mobx-state-tree").IType<number | undefined, number, number>;
        custom: import("mobx-state-tree").IType<any, any, any>;
        visible: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        draggable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        selectable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        contentEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        styleEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        alwaysOnTop: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        showInExport: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
    }, {
        readonly locked: boolean;
        readonly page: any;
        readonly store: any;
    } & {
        toJSON(): {};
    } & {
        clone(attrs: any): {
            id: string;
            type: string;
            name: string;
            x: number;
            y: number;
            rotation: number;
            opacity: number;
            blurEnabled: boolean;
            blurRadius: number;
            brightnessEnabled: boolean;
            brightness: number;
            sepiaEnabled: boolean;
            grayscaleEnabled: boolean;
            shadowEnabled: boolean;
            shadowBlur: number;
            shadowOffsetX: number;
            shadowOffsetY: number;
            shadowColor: string;
            shadowOpacity: number;
            custom: any;
            visible: boolean;
            draggable: boolean;
            selectable: boolean;
            contentEditable: boolean;
            styleEditable: boolean;
            alwaysOnTop: boolean;
            showInExport: boolean;
        } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
            readonly locked: boolean;
            readonly page: any;
            readonly store: any;
        } & {
            toJSON(): {};
        } & any & import("mobx-state-tree").IStateTreeNode<import("mobx-state-tree").IModelType<{
            id: import("mobx-state-tree").ISimpleType<string>;
            type: import("mobx-state-tree").IType<string | undefined, string, string>;
            name: import("mobx-state-tree").IType<string | undefined, string, string>;
            x: import("mobx-state-tree").IType<number | undefined, number, number>;
            y: import("mobx-state-tree").IType<number | undefined, number, number>;
            rotation: import("mobx-state-tree").IType<number | undefined, number, number>;
            opacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            blurEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            blurRadius: import("mobx-state-tree").IType<number | undefined, number, number>;
            brightnessEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            brightness: import("mobx-state-tree").IType<number | undefined, number, number>;
            sepiaEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            grayscaleEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowBlur: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetX: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetY: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowColor: import("mobx-state-tree").IType<string | undefined, string, string>;
            shadowOpacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            custom: import("mobx-state-tree").IType<any, any, any>;
            visible: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            draggable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            selectable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            contentEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            styleEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            alwaysOnTop: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            showInExport: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        }, {
            readonly locked: boolean;
            readonly page: any;
            readonly store: any;
        } & {
            toJSON(): {};
        } & any, import("mobx-state-tree").ModelCreationType<import("mobx-state-tree/dist/internal").ExtractCFromProps<{
            id: import("mobx-state-tree").ISimpleType<string>;
            type: import("mobx-state-tree").IType<string | undefined, string, string>;
            name: import("mobx-state-tree").IType<string | undefined, string, string>;
            x: import("mobx-state-tree").IType<number | undefined, number, number>;
            y: import("mobx-state-tree").IType<number | undefined, number, number>;
            rotation: import("mobx-state-tree").IType<number | undefined, number, number>;
            opacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            blurEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            blurRadius: import("mobx-state-tree").IType<number | undefined, number, number>;
            brightnessEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            brightness: import("mobx-state-tree").IType<number | undefined, number, number>;
            sepiaEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            grayscaleEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowBlur: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetX: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetY: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowColor: import("mobx-state-tree").IType<string | undefined, string, string>;
            shadowOpacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            custom: import("mobx-state-tree").IType<any, any, any>;
            visible: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            draggable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            selectable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            contentEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            styleEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            alwaysOnTop: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            showInExport: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        }>>, {}>>;
        set(attrs: any): void;
        moveUp(): void;
        moveTop(): void;
        moveDown(): void;
        moveBottom(): void;
        beforeDestroy(): void;
    }, import("mobx-state-tree").ModelCreationType<import("mobx-state-tree/dist/internal").ExtractCFromProps<{
        id: import("mobx-state-tree").ISimpleType<string>;
        type: import("mobx-state-tree").IType<string | undefined, string, string>;
        name: import("mobx-state-tree").IType<string | undefined, string, string>;
        x: import("mobx-state-tree").IType<number | undefined, number, number>;
        y: import("mobx-state-tree").IType<number | undefined, number, number>;
        rotation: import("mobx-state-tree").IType<number | undefined, number, number>;
        opacity: import("mobx-state-tree").IType<number | undefined, number, number>;
        blurEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        blurRadius: import("mobx-state-tree").IType<number | undefined, number, number>;
        brightnessEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        brightness: import("mobx-state-tree").IType<number | undefined, number, number>;
        sepiaEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        grayscaleEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        shadowEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        shadowBlur: import("mobx-state-tree").IType<number | undefined, number, number>;
        shadowOffsetX: import("mobx-state-tree").IType<number | undefined, number, number>;
        shadowOffsetY: import("mobx-state-tree").IType<number | undefined, number, number>;
        shadowColor: import("mobx-state-tree").IType<string | undefined, string, string>;
        shadowOpacity: import("mobx-state-tree").IType<number | undefined, number, number>;
        custom: import("mobx-state-tree").IType<any, any, any>;
        visible: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        draggable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        selectable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        contentEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        styleEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        alwaysOnTop: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        showInExport: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
    }>>, {}>>)[] | undefined;
    element?: ({
        id: string;
        type: string;
        name: string;
        x: number;
        y: number;
        rotation: number;
        opacity: number;
        blurEnabled: boolean;
        blurRadius: number;
        brightnessEnabled: boolean;
        brightness: number;
        sepiaEnabled: boolean;
        grayscaleEnabled: boolean;
        shadowEnabled: boolean;
        shadowBlur: number;
        shadowOffsetX: number;
        shadowOffsetY: number;
        shadowColor: string;
        shadowOpacity: number;
        custom: any;
        visible: boolean;
        draggable: boolean;
        selectable: boolean;
        contentEditable: boolean;
        styleEditable: boolean;
        alwaysOnTop: boolean;
        showInExport: boolean;
    } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
        readonly locked: boolean;
        readonly page: any;
        readonly store: any;
    } & {
        toJSON(): {};
    } & {
        clone(attrs: any): {
            id: string;
            type: string;
            name: string;
            x: number;
            y: number;
            rotation: number;
            opacity: number;
            blurEnabled: boolean;
            blurRadius: number;
            brightnessEnabled: boolean;
            brightness: number;
            sepiaEnabled: boolean;
            grayscaleEnabled: boolean;
            shadowEnabled: boolean;
            shadowBlur: number;
            shadowOffsetX: number;
            shadowOffsetY: number;
            shadowColor: string;
            shadowOpacity: number;
            custom: any;
            visible: boolean;
            draggable: boolean;
            selectable: boolean;
            contentEditable: boolean;
            styleEditable: boolean;
            alwaysOnTop: boolean;
            showInExport: boolean;
        } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
            readonly locked: boolean;
            readonly page: any;
            readonly store: any;
        } & {
            toJSON(): {};
        } & any & import("mobx-state-tree").IStateTreeNode<import("mobx-state-tree").IModelType<{
            id: import("mobx-state-tree").ISimpleType<string>;
            type: import("mobx-state-tree").IType<string | undefined, string, string>;
            name: import("mobx-state-tree").IType<string | undefined, string, string>;
            x: import("mobx-state-tree").IType<number | undefined, number, number>;
            y: import("mobx-state-tree").IType<number | undefined, number, number>;
            rotation: import("mobx-state-tree").IType<number | undefined, number, number>;
            opacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            blurEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            blurRadius: import("mobx-state-tree").IType<number | undefined, number, number>;
            brightnessEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            brightness: import("mobx-state-tree").IType<number | undefined, number, number>;
            sepiaEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            grayscaleEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowBlur: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetX: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetY: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowColor: import("mobx-state-tree").IType<string | undefined, string, string>;
            shadowOpacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            custom: import("mobx-state-tree").IType<any, any, any>;
            visible: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            draggable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            selectable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            contentEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            styleEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            alwaysOnTop: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            showInExport: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        }, {
            readonly locked: boolean;
            readonly page: any;
            readonly store: any;
        } & {
            toJSON(): {};
        } & any, import("mobx-state-tree").ModelCreationType<import("mobx-state-tree/dist/internal").ExtractCFromProps<{
            id: import("mobx-state-tree").ISimpleType<string>;
            type: import("mobx-state-tree").IType<string | undefined, string, string>;
            name: import("mobx-state-tree").IType<string | undefined, string, string>;
            x: import("mobx-state-tree").IType<number | undefined, number, number>;
            y: import("mobx-state-tree").IType<number | undefined, number, number>;
            rotation: import("mobx-state-tree").IType<number | undefined, number, number>;
            opacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            blurEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            blurRadius: import("mobx-state-tree").IType<number | undefined, number, number>;
            brightnessEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            brightness: import("mobx-state-tree").IType<number | undefined, number, number>;
            sepiaEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            grayscaleEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowBlur: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetX: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetY: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowColor: import("mobx-state-tree").IType<string | undefined, string, string>;
            shadowOpacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            custom: import("mobx-state-tree").IType<any, any, any>;
            visible: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            draggable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            selectable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            contentEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            styleEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            alwaysOnTop: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            showInExport: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        }>>, {}>>;
        set(attrs: any): void;
        moveUp(): void;
        moveTop(): void;
        moveDown(): void;
        moveBottom(): void;
        beforeDestroy(): void;
    } & import("mobx-state-tree").IStateTreeNode<import("mobx-state-tree").IModelType<{
        id: import("mobx-state-tree").ISimpleType<string>;
        type: import("mobx-state-tree").IType<string | undefined, string, string>;
        name: import("mobx-state-tree").IType<string | undefined, string, string>;
        x: import("mobx-state-tree").IType<number | undefined, number, number>;
        y: import("mobx-state-tree").IType<number | undefined, number, number>;
        rotation: import("mobx-state-tree").IType<number | undefined, number, number>;
        opacity: import("mobx-state-tree").IType<number | undefined, number, number>;
        blurEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        blurRadius: import("mobx-state-tree").IType<number | undefined, number, number>;
        brightnessEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        brightness: import("mobx-state-tree").IType<number | undefined, number, number>;
        sepiaEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        grayscaleEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        shadowEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        shadowBlur: import("mobx-state-tree").IType<number | undefined, number, number>;
        shadowOffsetX: import("mobx-state-tree").IType<number | undefined, number, number>;
        shadowOffsetY: import("mobx-state-tree").IType<number | undefined, number, number>;
        shadowColor: import("mobx-state-tree").IType<string | undefined, string, string>;
        shadowOpacity: import("mobx-state-tree").IType<number | undefined, number, number>;
        custom: import("mobx-state-tree").IType<any, any, any>;
        visible: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        draggable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        selectable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        contentEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        styleEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        alwaysOnTop: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        showInExport: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
    }, {
        readonly locked: boolean;
        readonly page: any;
        readonly store: any;
    } & {
        toJSON(): {};
    } & {
        clone(attrs: any): {
            id: string;
            type: string;
            name: string;
            x: number;
            y: number;
            rotation: number;
            opacity: number;
            blurEnabled: boolean;
            blurRadius: number;
            brightnessEnabled: boolean;
            brightness: number;
            sepiaEnabled: boolean;
            grayscaleEnabled: boolean;
            shadowEnabled: boolean;
            shadowBlur: number;
            shadowOffsetX: number;
            shadowOffsetY: number;
            shadowColor: string;
            shadowOpacity: number;
            custom: any;
            visible: boolean;
            draggable: boolean;
            selectable: boolean;
            contentEditable: boolean;
            styleEditable: boolean;
            alwaysOnTop: boolean;
            showInExport: boolean;
        } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
            readonly locked: boolean;
            readonly page: any;
            readonly store: any;
        } & {
            toJSON(): {};
        } & any & import("mobx-state-tree").IStateTreeNode<import("mobx-state-tree").IModelType<{
            id: import("mobx-state-tree").ISimpleType<string>;
            type: import("mobx-state-tree").IType<string | undefined, string, string>;
            name: import("mobx-state-tree").IType<string | undefined, string, string>;
            x: import("mobx-state-tree").IType<number | undefined, number, number>;
            y: import("mobx-state-tree").IType<number | undefined, number, number>;
            rotation: import("mobx-state-tree").IType<number | undefined, number, number>;
            opacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            blurEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            blurRadius: import("mobx-state-tree").IType<number | undefined, number, number>;
            brightnessEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            brightness: import("mobx-state-tree").IType<number | undefined, number, number>;
            sepiaEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            grayscaleEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowBlur: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetX: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetY: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowColor: import("mobx-state-tree").IType<string | undefined, string, string>;
            shadowOpacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            custom: import("mobx-state-tree").IType<any, any, any>;
            visible: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            draggable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            selectable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            contentEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            styleEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            alwaysOnTop: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            showInExport: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        }, {
            readonly locked: boolean;
            readonly page: any;
            readonly store: any;
        } & {
            toJSON(): {};
        } & any, import("mobx-state-tree").ModelCreationType<import("mobx-state-tree/dist/internal").ExtractCFromProps<{
            id: import("mobx-state-tree").ISimpleType<string>;
            type: import("mobx-state-tree").IType<string | undefined, string, string>;
            name: import("mobx-state-tree").IType<string | undefined, string, string>;
            x: import("mobx-state-tree").IType<number | undefined, number, number>;
            y: import("mobx-state-tree").IType<number | undefined, number, number>;
            rotation: import("mobx-state-tree").IType<number | undefined, number, number>;
            opacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            blurEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            blurRadius: import("mobx-state-tree").IType<number | undefined, number, number>;
            brightnessEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            brightness: import("mobx-state-tree").IType<number | undefined, number, number>;
            sepiaEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            grayscaleEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            shadowBlur: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetX: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowOffsetY: import("mobx-state-tree").IType<number | undefined, number, number>;
            shadowColor: import("mobx-state-tree").IType<string | undefined, string, string>;
            shadowOpacity: import("mobx-state-tree").IType<number | undefined, number, number>;
            custom: import("mobx-state-tree").IType<any, any, any>;
            visible: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            draggable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            selectable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            contentEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            styleEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            alwaysOnTop: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
            showInExport: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        }>>, {}>>;
        set(attrs: any): void;
        moveUp(): void;
        moveTop(): void;
        moveDown(): void;
        moveBottom(): void;
        beforeDestroy(): void;
    }, import("mobx-state-tree").ModelCreationType<import("mobx-state-tree/dist/internal").ExtractCFromProps<{
        id: import("mobx-state-tree").ISimpleType<string>;
        type: import("mobx-state-tree").IType<string | undefined, string, string>;
        name: import("mobx-state-tree").IType<string | undefined, string, string>;
        x: import("mobx-state-tree").IType<number | undefined, number, number>;
        y: import("mobx-state-tree").IType<number | undefined, number, number>;
        rotation: import("mobx-state-tree").IType<number | undefined, number, number>;
        opacity: import("mobx-state-tree").IType<number | undefined, number, number>;
        blurEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        blurRadius: import("mobx-state-tree").IType<number | undefined, number, number>;
        brightnessEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        brightness: import("mobx-state-tree").IType<number | undefined, number, number>;
        sepiaEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        grayscaleEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        shadowEnabled: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        shadowBlur: import("mobx-state-tree").IType<number | undefined, number, number>;
        shadowOffsetX: import("mobx-state-tree").IType<number | undefined, number, number>;
        shadowOffsetY: import("mobx-state-tree").IType<number | undefined, number, number>;
        shadowColor: import("mobx-state-tree").IType<string | undefined, string, string>;
        shadowOpacity: import("mobx-state-tree").IType<number | undefined, number, number>;
        custom: import("mobx-state-tree").IType<any, any, any>;
        visible: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        draggable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        selectable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        contentEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        styleEditable: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        alwaysOnTop: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
        showInExport: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
    }>>, {}>>) | undefined;
    store: StoreType;
}) => JSX.Element) & {
    displayName: string;
};
export default FiltersPicker;
